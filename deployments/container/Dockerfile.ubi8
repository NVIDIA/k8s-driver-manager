# Copyright (c) 2019-2022, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG CUDA_VERSION
ARG BASE_DIST
ARG GOLANG_VERSION=1.20.2

FROM golang:${GOLANG_VERSION} AS build

WORKDIR /work

COPY go.mod go.mod
COPY go.sum go.sum
COPY vendor vendor
COPY cmd/nvdrain cmd/nvdrain

RUN GOOS=linux go build -o nvdrain ./cmd/nvdrain

FROM nvidia/cuda:${CUDA_VERSION}-base-${BASE_DIST}

ARG TARGETARCH

RUN dnf install -y kmod

# Install K8s client to fetch node resources, cluster version and to perform cleanup of pods for driver unload
RUN OS_ARCH=${TARGETARCH/x86_64/amd64} && OS_ARCH=${OS_ARCH/aarch64/arm64} && curl -o /usr/bin/kubectl -L "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/${OS_ARCH}/kubectl";
RUN chmod a+x /usr/bin/kubectl

COPY driver-manager /usr/local/bin
COPY scripts/vfio-manage /usr/local/bin
COPY --from=build /work/nvdrain /usr/local/bin

LABEL io.k8s.display-name="NVIDIA Driver Upgrade Manager for Kubernetes"
LABEL name="NVIDIA Driver Upgrade Manager for Kubernetes"
LABEL vendor="NVIDIA"
LABEL version="${VERSION}"
LABEL release="N/A"
LABEL summary="Manages upgrade of NVIDIA drivers on kubernetes"
LABEL description="See summary"

RUN mkdir /licenses && mv /NGC-DL-CONTAINER-LICENSE /licenses/NGC-DL-CONTAINER-LICENSE

# Install / upgrade packages here that are required to resolve CVEs
ARG CVE_UPDATES
RUN if [ -n "${CVE_UPDATES}" ]; then \
        yum update -y ${CVE_UPDATES} && \
        rm -rf /var/cache/yum/*; \
    fi

ENTRYPOINT ["driver-manager", "preflight_check"]
